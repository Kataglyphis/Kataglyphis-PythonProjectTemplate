include:
  - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
    file: "/python/linux/common-steps.yml"
  - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
    file: "/python/windows/common-steps.yml"
  - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
    file: "/python/windows/packaging-binaries.yml"

# here you can override specific shell commands for your needs
# .ipa364inference_windows_specifics:
#   before_script:
#     - pip install git+https://${CI_DEPLOY_USER}:${CI_DEPLOY_PASSWORD}@gitlab.cc-asp.fraunhofer.de/ipa-scene-analysis/packages/ipa364commons@v1.3.0

# Existing sections
# The default is linux; Windows mehhhhh
default:
  image: container-registry.gitlab.cc-asp.fraunhofer.de/aimv/research_teams/activity_and_scene_analysis/frameworks/forks/mmaction1x-ipa364

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_DEPTH: "1"
  TEST_FOLDER: "tests/unit"

cache:
  paths:
    - .cache/pip

stages:
  - build_docs
  - build
  - static_analysis
  - unit_test
  - integration_test
  - packaging
  - packaging_binaries

trigger_build_docs:
  stage: build_docs
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/build-docs.yml"

install:
  tags: [dgx]
  stage: build
  extends: .common_steps_per_job_on_linux
  environment: build
  script:
    - pip install .
  artifacts:
    paths:
      - build/*

trigger_python_static_analysis:
  stage: static_analysis
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/static-analysis.yml"

trigger_pytests_matrix:
  stage: unit_test
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/testing/pytest-matrix.yml"
        inputs:
          python_versions_unit_test_matrix:
            ["3.8", "3.9", "3.11", "3.12", "3.13"]

# our gitlab is configured this job is running in root .yml file
pytest_x86_linux_py3.10_with_coverage:
  tags: [asprunner]
  image: python:3.10
  stage: unit_test
  extends: .common_steps_per_job_on_linux
  script:
    - pip install '.[dev,test]'
    - pytest "$TEST_FOLDER" --cov=ipa364pythonpackage --cov-report term-missing --cov-report html --junitxml=docs/test_results/report.xml
  # this makes nice results popping up in gitlab :)
  coverage: '/^TOTAL.+?(\d+\%)$/'
  artifacts:
    when: always
    reports:
      junit: docs/test_results/report.xml
    paths:
      - htmlcov/

trigger_pytest_arm_jetson_linux_matrix:
  stage: unit_test
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/testing/pytest-arm-jetson-linux.yml"

trigger_pytests_x86_linux:
  stage: unit_test
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/testing/pytest-x86-linux-nvidia-container-matrix.yml"

run:
  extends: .common_steps_per_job_on_linux
  tags: [dgx]
  stage: integration_test
  script:
    - pip list
    - python -c "import mmdet;print(mmdet.__version__)"
    - python -c "import mmaction;print(mmaction.__version__)"

trigger_python_packaging_x86_linux:
  stage: packaging
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/packaging-sources.yml"

trigger_build_linux_binaries_only_package_trigger:
  stage: packaging_binaries
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/linux/packaging-binaries-linux-x86-64.yml"
        inputs:
          image: "container-registry.gitlab.cc-asp.fraunhofer.de/aimv/research_teams/activity_and_scene_analysis/frameworks/forks/mmaction1x-ipa364"
          runner: "dgx"

trigger_build_linux_binaries_only_package_jetson:
  stage: packaging_binaries
  trigger:
    include:
      - project: "AIMV/research_teams/activity_and_scene_analysis/templates/gitlab"
        file: "/python/linux/NVIDIAJetson/packaging-binaries-jetson.yml"
        inputs:
          image: "nvcr.io/nvidia/l4t-base:r36.2.0"
          runner: "jetson"
# How to override things
# Override the job in your pipeline
# packaging_windows_binaries:
#   extends:
#     - .common_steps_per_job_on_windows
#     - .ipa364inference_windows_specifics
