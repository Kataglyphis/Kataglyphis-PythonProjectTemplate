name: Build Linux Binaries

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string

jobs:
  build-package-binaries-linux-x86-64:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python 3.13
        uses: actions/setup-python@v6.0.0
        with:
          python-version: "3.13"
      
      - name: Prepare environment
        run: |
          python3 -m pip install --upgrade pip
          pip install -e .[test]

      - name: Build and rename Linux wheels
        run: |
          ARCH="$(uname -m)"
          # normalize common uname arch names to wheel platform tokens
          case "$ARCH" in
            x86_64) WHEEL_ARCH="x86_64" ;;
            i386|i686) WHEEL_ARCH="i686" ;;
            aarch64|arm64) WHEEL_ARCH="aarch64" ;;
            armv7l) WHEEL_ARCH="armv7l" ;;
            *) WHEEL_ARCH="$ARCH" ;;
          esac
          export CYTHONIZE="True"
          cp resources/packaging/binary/MANIFEST.in MANIFEST.in
          pip install --upgrade setuptools wheel cython build twine
          python3 setup.py build_ext --inplace
          python3 -m build
          PYTHON_VERSION_SHORT=$(python3 -c 'import sys; print(f"{sys.version_info[0]}{sys.version_info[1]}")')
          PYTHON_ABI="cp${PYTHON_VERSION_SHORT}"
          PLATFORM="manylinux1_${WHEEL_ARCH}"
          TAG="${PYTHON_ABI}-${PYTHON_ABI}-${PLATFORM}"
          for f in dist/*.whl; do
            mv "$f" "$(echo $f | sed "s/py3-none-any/$TAG/")"
          done

      - name: Store distribution artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: dist-artifact-${{ github.run_id }}
          path: dist/*
