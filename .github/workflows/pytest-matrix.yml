# .github/workflows/pytest-matrix.yml
name: Pytest Matrix

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      packagename:
        required: true
        type: string
      python-versions:
        required: true
        type: string

jobs:
  python-tests:
    name: Pytest Matrix
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Prepare environment
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      # ensure docs/test_results exists (Linux / macOS)
      - name: Ensure test results dir
        if: ${{ inputs.runner != 'windows-2025' }}
        run: mkdir -p docs/test_results

      # ensure docs/test_results exists (Windows pwsh)
      - name: Ensure test results dir (Windows)
        if: ${{ inputs.runner == 'windows-2025' }}
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force docs/test_results | Out-Null
      
      - name: Run tests (Windows pwsh)
        if: ${{ inputs.runner == 'windows-2025' }}
        shell: pwsh
        run: |
          pytest tests/unit `
          --cov=kataglyphispythonpackage `
          --cov-report=term-missing `
          --cov-report=html:docs/test_results/coverage-html-3.10 `
          --cov-report=xml:docs/test_results/coverage-3.10.xml `
          --junitxml=docs/test_results/report-3.10.xml `
          --html=docs/test_results/pytest-report-${{ matrix.python-version }}.html `
          --self-contained-html `
          --md-report  docs/test_results/pytest-report-${{ matrix.python-version }}.md
          python bench/demo_cprofile.py
          python bench/demo_line_profiler.py
          python -m memory_profiler bench/demo_memory_profiling.py
          py-spy record --rate 200 --duration 45 -o profile.svg -- python bench/demo_py_spy.py
          pytest bench/demo_pytest_benchmark.py
  
      - name: Run tests
        if: ${{ inputs.runner != 'windows-2025' }}
        run: |
          pytest tests/unit \
            --cov=${{ inputs.packagename }} \
            --cov-report=term-missing \
            --cov-report=html:docs/test_results/coverage-html-${{ matrix.python-version }} \
            --cov-report=xml:docs/test_results/coverage-${{ matrix.python-version }}.xml \
            --junitxml=docs/test_results/report-${{ matrix.python-version }}.xml \
            --html=docs/test_results/pytest-report-${{ matrix.python-version }}.html \
            --self-contained-html \
            --md-report docs/test_results/pytest-report-${{ matrix.python-version }}.md
          python bench/demo_cprofile.py
          python bench/demo_cprofile.py
          python bench/demo_line_profiler.py
          python -m memory_profiler bench/demo_memory_profiling.py
          py-spy record --rate 200 --duration 45 -o profile.svg -- python bench/demo_py_spy.py
          pytest bench/demo_pytest_benchmark.py

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: reports-${{matrix.python-version}}-${{ inputs.runner }}
          path: docs/test_results/
